
services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: racky-mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    networks:
      - racky-network

  # Backend Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: racky-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:5000"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - PORT=${BACKEND_PORT}
      - NODE_ENV=${NODE_ENV}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - CLIENT_URL=${CLIENT_URL}
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - racky-network
    command: npm run dev

  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: racky-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - racky-network
    command: npm run dev -- --host 0.0.0.0

volumes:
  mongodb_data:

networks:
  racky-network:
    driver: bridge